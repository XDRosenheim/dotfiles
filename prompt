PROMPT_COMMAND='set_prompt'

set_prompt () {
	local last_command=$?  # Must come first!
	# Clear it..
	PS1=""
##### Colors ###############################
##### Regular
	local txtblk='\[\e[0;30m\]' # Black
	local txtred='\[\e[0;31m\]' # Red
	local txtgrn='\[\e[0;32m\]' # Green
	local txtylw='\[\e[0;33m\]' # Yellow
	local txtblu='\[\e[0;34m\]' # Blue
	local txtpur='\[\e[0;35m\]' # Purple
	local txtcyn='\[\e[0;36m\]' # Cyan
	local txtwht='\[\e[0;37m\]' # White
##### Bold
	local bldblk='\[\e[1;30m\]' # Black
	local bldred='\[\e[1;31m\]' # Red
	local bldgrn='\[\e[1;32m\]' # Green
	local bldylw='\[\e[1;33m\]' # Yellow
	local bldblu='\[\e[1;34m\]' # Blue
	local bldpur='\[\e[1;35m\]' # Purple
	local bldcyn='\[\e[1;36m\]' # Cyan
	local bldwht='\[\e[1;37m\]' # White
##### Underline
	local unkblk='\[\e[4;30m\]' # Black
	local undred='\[\e[4;31m\]' # Red
	local undgrn='\[\e[4;32m\]' # Green
	local undylw='\[\e[4;33m\]' # Yellow
	local undblu='\[\e[4;34m\]' # Blue
	local undpur='\[\e[4;35m\]' # Purple
	local undcyn='\[\e[4;36m\]' # Cyan
	local undwht='\[\e[4;37m\]' # White
##### Background
	local bakblk='\[\e[40m\]'   # Black
	local bakred='\[\e[41m\]'   # Red
	local bakgrn='\[\e[42m\]'   # Green
	local bakylw='\[\e[43m\]'   # Yellow
	local bakblu='\[\e[44m\]'   # Blue
	local bakpur='\[\e[45m\]'   # Purple
	local bakcyn='\[\e[46m\]'   # Cyan
	local bakwht='\[\e[47m\]'   # White
##### Reset
	local txtrst='\[\e[0m\]'    # Text Reset
##### Bold Underline
	local bldundblu='\[\e[1;4;34m\]' # Blue
############################################
	local leader='─'
	local starter='┤'
	local ender='├'
##### Stuff ### Change these ###############
	local successsymbol=█		# Code for a successsymbol #'\342\234\223' is a check mark
	local errorsymbol=█			# Code for an errorsymbol #'\342\234\227' is a cross
	local mainColor=$bldwht		# Main color is the color of the lines and parentheses
	local dirColor=$bldundblu	# Color of current directory
############################################

	# If the last command was successfull, print the "success-symbol".
	if [[ $last_command == 0 ]]; then
		PS1+="$mainColor┌$leader$starter$txtgrn$successsymbol$mainColor$ender$leader"
	else
		PS1+="$mainColor┌$leader$starter$last_command$txtrst$ender$leader$starter$txtred$errorsymbol$mainColor$ender$leader"
	fi

	# If root, just print the host in red. Otherwise, print the current user and host in green.
	if [[ $EUID != 0 ]]; then
		# Hostname
		PS1+="$starter$txtrst$txtylw\h$txtrst$mainColor$ender"
		# Leader
		PS1+=$leader
		# Date
		PS1+="$starter$txtrst$txtcyn$(date "+%H:%M %a %d %b")$mainColor$ender"
	else
		# Username
		PS1+="$mainColor$starter$txtrst$undgrn\u$txtrst$mainColor$ender"
		# Leader
		PS1+=$leader
		# Hostname
		PS1+="$starter$txtrst$txtylw\h$txtrst$mainColor$ender"
		# Leader
		PS1+=$leader
		# Date
		PS1+="$starter$txtrst$txtcyn$(date "+%H:%M %a %d %b")$mainColor$ender"
	fi

    # Show the git branch if there is any.
	# Leader
	#PS1+=$leader
	# Show git branch for working directory
	#PS1+="$starter$txtrst$txtpur$(__git_ps1)$mainColor$ender"

	PS1+=$leader
	PS1+="$starter$bldundblu\w$txtrst$mainColor$ender"

	files
	if [ $GetAmountOfFiles > 0 ]; then
		PS1+=$leader
		PS1+=$starter$txtylw$GetAmountOfFiles
		PS1+=' files'
		PS1+=$txtrst$mainColor$ender
	fi

	dirs
	if [ $GetAmountOfDirs > 0 ]; then
		PS1+=$leader
		PS1+=$starter$txtylw$GetAmountOfDirs
		PS1+=' directories'
		PS1+=$txtrst$mainColor$ender$leader
	fi
	
	# New line and reset the text color to the default.
	PS1+="\n$mainColor└►$txtrst "
}

files () {
	GetAmountOfFiles=$(find . -maxdepth 1 -type f | wc -w)
}

dirs () {
	GetAmountOfDirs=$(find . -maxdepth 1 -type d | wc -w)
}
